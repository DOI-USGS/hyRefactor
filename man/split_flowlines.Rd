% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/split_flowline.R
\name{split_flowlines}
\alias{split_flowlines}
\title{Split Flowlines}
\usage{
split_flowlines(flines, max_length = NULL, events = NULL, para = 0, avoid = NA)
}
\arguments{
\item{flines}{data.frame with COMID, toCOMID, LENGTHKM
and LINESTRING sf column in "meters" projection}

\item{max_length}{maximum segment length to return}

\item{events}{data.frame containing events as generated by nhdplusTools::get_flowline_index()}

\item{para}{numeric how many threads to use in parallel computation}

\item{avoid}{vector of ids to avoid}
}
\value{
All the flowlines with some split apart. COMIDs are returned as strings 
with a semantic part number appended. That is .1, .2, ... .10, .11, etc. are 
appended and must be treated as one would treat a semantic version. .1 is the 
most upstream and the sequence increases in the downstream direction.
}
\description{
A wrapper for split_lines that works on nhdplus attributes
}
\examples{
source(system.file("extdata", "new_hope_data.R", package = "hyRefactor"))

new_hope_flowline <- 
  dplyr::right_join(dplyr::select(new_hope_flowline, COMID, REACHCODE, FromMeas, ToMeas),
                    suppressWarnings(nhdplusTools::prepare_nhdplus(
                      new_hope_flowline, 0, 0, 0, FALSE, warn = FALSE)),
                    by = "COMID")

split <- split_flowlines(suppressWarnings(sf::st_cast(sf::st_transform(
  new_hope_flowline, 5070), "LINESTRING")),
                         max_length = 2000, events = new_hope_events)

mapview::mapview(list(new_hope_events, new_hope_flowline))

mapview::mapview(list(new_hope_events, split))

}
\seealso{
The \code{\link{refactor_nhdplus}} function implements a complete
workflow using `split_flowlines()`.
}
